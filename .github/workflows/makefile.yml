name: MushMatch Makefile build

on:
  push:
    tags:
      - 'releases/v*'

    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
    build:
        name: Build MushMatch
        runs-on: ubuntu-latest

        steps:
          - name: Checkout
            uses: actions/checkout@v2

          - name: Install dependencies
            run: sudo apt install zip bzip2 gzip tar curl bash

          - name: Setup Go
            uses: actions/setup-go@v2.1.4

          - name: Install Mustache (build dependency)
            run: go get github.com/cbroglie/mustache/...

          - name: Add Go bin to PATH
            run: echo 'export PATH="$HOME/go/bin:$PATH"'>>~/.bash_profile

          - name: Cache build environment downloads
            id: cache-downloads
            uses: actions/cache@v2
            with:
                path: |
                    build
                    !build/ut-server
                key: ${{ runner.os }}-${{ hashFiles('build/deps/**') }}
                restore-keys: |
                    ${{ runner.os }}-

          - name: Download build environment
            if: steps.cache-downloads.outputs.cache-hit != 'true'
            run: make download

          - name: Set up build environment
            run: make configure

          - name: Build
            run: MUSTACHE="$HOME/go/bin/mustache" make build

          - name: Upload build artifacts
            uses: actions/upload-artifact@v2
            with:
                name: mushmatch-distrib-zip
                path: build/dist/MushMatch/latest/*
                if-no-files-found: error

    publish:
        name: Publish Tag Release (if applicable)
        runs-on: ubuntu-latest
        needs: build
        if: startsWith(github.ref, 'refs/tags/releases/v')

        steps:
          - name: Checkout
            uses: actions/checkout@v2

          - name: Download build artifacts
            uses: actions/download-artifact@v2
            with:
                name: mushmatch-distrib-zip
                path: /tmp/mushmatch-distrib

          - name: (Get version and build number)
            id: get-version-num
            run: |
                source buildconfig.sh
                echo "::set-output name=version::$version"
                echo "::set-output name=build::$build"

          - name: Release!
            id: create_release
            uses: softprops/action-gh-release@v1
            with:
                files: /tmp/mushmatch-distrib/MushMatch-${{ steps.get-version-num.outputs.build }}.*
                tag_name: releases/v${{ steps.get-version-num.outputs.version }}
                name: Mush Match v${{ steps.get-version-num.outputs.version }}
                body_path: latest-changes.yml
                draft: false
                prerelease: false
